<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "User_Guide.ent">
%BOOK_ENTITIES;
]>

<section id="management_slee_top">
	<title>Managing and Monitoring JAIN SLEE Container</title>
	<section id="management_slee_state">
		<title>View JAIN SLEE Server Version and State</title>
		<para>In the top, at the summary section the Type, Version and State of the server is shown.</para>
		
		<figure>
			<title>&MANAGEMENT.PLATFORM; JAIN SLEE Summary View.</title>
			<mediaobject>
				<imageobject>
					<imagedata width="300px" align="center" fileref="images/img-jopr_slee_summary.png" format="PNG"/>
				</imageobject>
				<textobject>
					<para>&MANAGEMENT.PLATFORM; JAIN SLEE Summary View.</para>
				</textobject>
			</mediaobject>
		</figure>
	</section>
	<section id="management_slee_availability">
		<title>Monitor JAIN SLEE Availability over time</title>
		<para>By accessing the <guilabel>MONITOR</guilabel> tab it's possible to see a graph showing the availability of the server over time.</para>
		
		<figure>
			<title>&MANAGEMENT.PLATFORM; <acronym>JAIN SLEE</acronym> Plugin Availability View.</title>
			<mediaobject>
				<imageobject>
					<imagedata width="300px" align="center" fileref="images/img-jopr_slee_availability.png" format="PNG"/>
				</imageobject>
				<textobject>
					<para>&MANAGEMENT.PLATFORM; <acronym>JAIN SLEE</acronym> Plugin Availability View.</para>
				</textobject>
			</mediaobject>
		</figure>
	</section>
	<section id="management_slee_installed_components">
		<title>View installed JAIN SLEE Components</title>
		<para>By accessing the <guilabel>INVENTORY</guilabel> tab a table presenting the installed components and deployable units is shown.</para>
		
		<figure>
			<title>&MANAGEMENT.PLATFORM; <acronym>JAIN SLEE</acronym> Plugin Inventory View.</title>
			<mediaobject>
				<imageobject>
					<imagedata width="300px" align="center" fileref="images/img-jopr_slee_inventory.png" format="PNG"/>
				</imageobject>
				<textobject>
					<para>&MANAGEMENT.PLATFORM; <acronym>JAIN SLEE</acronym> Plugin Inventory View.</para>
				</textobject>
			</mediaobject>
		</figure>
		
		<note>
			<title>Components deployed outside &MANAGEMENT.PLATFORM;</title>
			<para>If components are installed outside &MANAGEMENT.PLATFORM;, after &MANAGEMENT.PLATFORM; Agent is started, the list of installed components will not be updated in a <emphasis>reasonable</emphasis> time.</para>
			<para>For performance reasons, &MANAGEMENT.PLATFORM; servers childs (such as Deployable Units, Resource Adaptors, SBBs and Services in <acronym>SLEE</acronym>) are checked for changes every 24 hours.</para>
		</note>
		
		<para>To force a service discovery, there are two options:</para>
		<itemizedlist>
			<listitem>
				<para>In the &MANAGEMENT.PLATFORM; web app, right-click the root item (Platform) of the <acronym>JAIN SLEE</acronym> Server and select <menuchoice><guimenu>Execute Operation</guimenu><guisubmenu>Manual Autodiscovery</guisubmenu></menuchoice>. Select <guilabel>Yes</guilabel> in <guilabel>Detailed Discovery</guilabel> and run the discovery by clicking the <guibutton>SCHEDULE</guibutton> button.</para>
			</listitem>
			<listitem>
				<para>In the &MANAGEMENT.PLATFORM; agent console, run a full discovery, by issuing the following command:<screen>&gt; discovery -f</screen></para>
			</listitem>
		</itemizedlist>
	</section>

	<section id="management_slee_install_uninstall_dus">
		<title>Install/Uninstall <acronym>JAIN SLEE</acronym> Deployable Units</title>
		<para>In the <guilabel>INVENTORY</guilabel> tab it's possible to Install/Uninstall <acronym>JAIN SLEE</acronym> Deployable Units.</para>
		
		<section id="install_du">
			<title>Install JAIN SLEE Deployable Units</title>
			
			<para>In order to install a deployable unit, select <guilabel>DeployableUnits</guilabel> on the <guilabel>Create New:</guilabel> option box and click <guibutton>OK</guibutton>, the following page will be shown:</para>
			
			<figure>
				<title>Installing a Deployable Unit with &MANAGEMENT.PLATFORM; <acronym>JAIN SLEE</acronym> Plugin.</title>
				<mediaobject>
					<imageobject>
						<imagedata width="300px" align="center" fileref="images/img-jopr_slee_install_du.png" format="PNG"/>
					</imageobject>
					<textobject>
						<para>Installing a Deployable Unit with &MANAGEMENT.PLATFORM; <acronym>JAIN SLEE</acronym> Plugin.</para>
					</textobject>
				</mediaobject>
			</figure>
			
			<para>Click the <guibutton>UPLOAD FILE...</guibutton> button, a new browser window will be shown to upload the <acronym>JAIN SLEE</acronym> Deployable Unit. Click <guibutton>Add...</guibutton>, select the Deployable Unit to be installed, click <guibutton>Upload</guibutton> to confirm and close this browser window.</para>
			
			<warning><para>You browser might ask you if you want to resend the information. Please accept it. Google Chrome browser may not support this operation!</para></warning>
			
			<para>Back on the main window for installing the <acronym>DU</acronym>, select either to do a persistent deploy (copy file to deploy folder) or not (simply call <command>install</command> on the DU).</para>
			
			<important>
				<title>Persistent vs JMX Deployment</title>
				<para>When doing a persistent deployment, further installation actions are automatically performed by the &THIS.PLATFORM; JAIN SLEE Deployer. If the <acronym>DU</acronym> is not deployed in a persistent way (<acronym>JMX</acronym>), component installation actions (such as Resource Adaptor entities creation, activation, Service activation) should be performed manually.</para>
			</important>

			<para>To confirm the deployment, click <guibutton>CREATE</guibutton>. The success of the operation should be displayed on the main view.</para>
		</section>
		<section id="uninstall_du">
			<title>Uninstall JAIN SLEE Deployable Units</title>
			
			<para>To uninstall a deployable unit, simply check the desired installed deployable unit on the <guilabel>INVENTORY</guilabel> tab and press <guibutton>DELETE</guibutton>. A confirmation dialog be displayed. The success of the operation will be shown on the main view.</para>
			
			<figure>
				<title>Uninstalling a Deployable Unit with &MANAGEMENT.PLATFORM; <acronym>JAIN SLEE</acronym> Plugin.</title>
				<mediaobject>
					<imageobject>
						<imagedata width="300px" align="center" fileref="images/img-jopr_slee_uninstall_du.png" format="PNG"/>
					</imageobject>
					<textobject>
						<para>Uninstalling a Deployable Unit with &MANAGEMENT.PLATFORM; <acronym>JAIN SLEE</acronym> Plugin.</para>
					</textobject>
				</mediaobject>
			</figure>
			
			<important>
				<title>Persistent vs JMX Undeployment</title>
				<para>When undeploying a <acronym>DU</acronym> it's automatically detected either if it is to do a Persistent (file is deleted from the deploy folder!) or a non Persistent undeployment, where only the <command>uninstall</command> command is called on the <acronym>DU</acronym>, requiring prior uninstalling actions (eg: remove <acronym>RA</acronym> Links and Entities) to have already been performed.</para>
			</important>						
		</section>
	</section>
	<section id="management_slee_op_changestate">
		<title>Start/Stop/Shutdown &THIS.PLATFORM; <acronym>JAIN SLEE</acronym> Server</title>
		<para>Under the <guilabel>OPERATIONS</guilabel> tab, an operation for Changing the <acronym>JAIN SLEE</acronym> container state can be found: <guilabel>Change Slee State</guilabel>.</para>
		
		<para>Clicking on the operation, a new pane opens so the parameters can be selected:</para>
		
		<figure>
			<title>Changing JAIN SLEE State.</title>
			<mediaobject>
				<imageobject>
					<imagedata width="300px" align="center" fileref="images/img-jopr_slee_op_sleestate.png" format="PNG"/>
				</imageobject>
				<textobject>
					<para>Changing <acronym>JAIN SLEE</acronym> State.</para>
				</textobject>
			</mediaobject>
		</figure>
		
		<variablelist>
			<title>Change Slee State Parameters</title>
			<varlistentry>
				<term>Action (required)</term>
				<listitem>
					<itemizedlist>
						<listitem>
							<para>start - Changes <acronym>SLEE</acronym> State to RUNNING state.</para>
						</listitem>
						<listitem>
							<para>stop - Changes <acronym>SLEE</acronym> State to STOPPED state.</para>
						</listitem>
						<listitem>
							<para>shutdown - Completely shutsdown <acronym>SLEE</acronym>. Requires to be in STOPPED state.</para>
						</listitem>
					</itemizedlist>
				</listitem>
			</varlistentry>
		</variablelist>
		
		<note><para>As any operation on &MANAGEMENT.PLATFORM;, this operation can be scheduled for a later time, have a defined timeout and/or include additional notes.</para></note>					

		<para>Clicking on the <guibutton>SCHEDULE</guibutton> executes (if <guilabel>Immediately</guilabel> is selected) or schedules the operation. After being executed, it's shown in <guilabel>HISTORY</guilabel>, <guilabel>Completed Operations</guilabel>. Clicking on its name shows the result(s).</para>
	</section>
	<section id="management_slee_op_list_acs">
		<title>List All Activity Contexts</title>
		<para>For monitoring purposes it is possible to have all JAIN SLEE Activity Contexts listed. This can be done with <guilabel>List all Activity Context</guilabel> operation, in <guilabel>OPERATIONS</guilabel> tab.</para>
		
		<para>This action takes no parameters.</para>
		
		<note><para>As any operation on &MANAGEMENT.PLATFORM;, this operation can be scheduled for a later time, have a defined timeout and/or include additional notes.</para></note>					

		<para>Clicking on the <guibutton>SCHEDULE</guibutton> executes (if <guilabel>Immediately</guilabel> is selected) or schedules the operation. After being executed, it's shown in <guilabel>HISTORY</guilabel>, <guilabel>Completed Operations</guilabel>. Clicking on its name shows the result(s).</para>

		<para>The result is presented in the following form:</para>

		<figure>
			<title>Sample result of invoking List All Activity Contexts.</title>
			<mediaobject>
				<imageobject>
					<imagedata width="300px" align="center" fileref="images/img-jopr_slee_op_acs_result.png" format="PNG"/>
				</imageobject>
				<textobject>
					<para>Sample result of invoking List All Activity Contexts.</para>
				</textobject>
			</mediaobject>
		</figure>
	</section>
	<section id="management_slee_op_query_acs">
		<title>Query Activity Context Liveness</title>
		<para>In order to clean dead Activities, it's possible to query Activity Context for their liveness. This can be done using <guilabel>Query Activity Context Liveness</guilabel> operation, in <guilabel>OPERATIONS</guilabel> tab.</para>
		
		<para>This action takes no parameters.</para>
		
		<note><para>As any operation on &MANAGEMENT.PLATFORM;, this operation can be scheduled for a later time, have a defined timeout and/or include additional notes.</para></note>					

		<para>Clicking on the <guibutton>SCHEDULE</guibutton> executes (if <guilabel>Immediately</guilabel> is selected) or schedules the operation. After being executed, it's shown in <guilabel>HISTORY</guilabel>, <guilabel>Completed Operations</guilabel>. Clicking on its name shows the result(s).</para>
	</section>
	
	<section>
		<title>Change Container Logging Configuration</title>
		<para>It is possible to switch the JAIN SLEE container logging configuration for better fitting the needs of the container. This can be done using <guilabel>Change Global Logging Profile</guilabel> operation, in <guilabel>OPERATIONS</guilabel> tab. It can be switched between three levels:</para>
		<variablelist>
			<title>Logging Configuration Levels</title>
			<varlistentry>
				<term>Level</term>
				<listitem>
					<itemizedlist>
						<listitem>
							<para>DEFAULT: Regular logging, at INFO level, displaying most user-related messages;</para>
						</listitem>
						<listitem>
							<para>DEBUG: More verbose logging, mostly using DEBUG/TRACE level, displaying message of interest for developers;</para>
						</listitem>
						<listitem>
							<para>PRODUCTION: Low verbosity and async logging, mostly in WARN level, for systems in production so that logging does impact performance.</para>
						</listitem>
					</itemizedlist>
				</listitem>
			</varlistentry>
		</variablelist>

		<note><para>As any operation on &MANAGEMENT.PLATFORM;, this operation can be scheduled for a later time, have a defined timeout and/or include additional notes.</para></note>

		<para>Clicking on the <guibutton>SCHEDULE</guibutton> executes (if <guilabel>Immediately</guilabel> is selected) or schedules the operation. After being executed, it's shown in <guilabel>HISTORY</guilabel>, <guilabel>Completed Operations</guilabel>. Clicking on its name shows the result(s).</para>

		<note><para>This changes the whole container logging configuration, so it will affect also logging for other running applications in the container, besides JAIN SLEE.</para></note>
	</section>

	<section>
		<title>Edit Container Logging Configurations</title>
		<para>It is possible to customize the above mentioned logging configurations, or also the currently in use container logging configuration. To perform this action, two operations should be executed:</para>
		
		<para>First, to retrieve the current logging configuration, the <guilabel>Get Logging Profile Configuration</guilabel> operation, in <guilabel>OPERATIONS</guilabel> tab should be used. One of the following options should be selected:</para>
		<variablelist>
			<title>Logging Configuration Levels</title>
			<varlistentry>
				<term>Level</term>
				<listitem>
					<itemizedlist>
						<listitem>
							<para>CURRENT: will retrieve the logging configuration currently in use by the container (can be a custom one);</para>
						</listitem>
						<listitem>
							<para>DEFAULT: will retrieve the DEFAULT logging configuration;</para>
						</listitem>
						<listitem>
							<para>DEBUG: will retrieve the DEBUG logging configuration;</para>
						</listitem>
						<listitem>
							<para>PRODUCTION: will retrieve the PRODUCTION logging configuration;</para>
						</listitem>
					</itemizedlist>
				</listitem>
			</varlistentry>
		</variablelist>

		<para>After being executed, it's shown in <guilabel>HISTORY</guilabel>, <guilabel>Completed Operations</guilabel>. Clicking on its name shows the result, which is the actual logging configuration.</para>

		<para>The result of the operation should be copied into your favourite XML editor and edited as desired.</para>
		
		<warning>
			<title>Logging configuration size limitation</title>
			<para>Currently there's a limitation on 2000 characters for the logging files, so caution should be used not to pass this limit when editing.</para>
		</warning>
		
		<para>When the editing is completed, the <guilabel>Update Logging Profile Configuration</guilabel> operation should be used to update the logging configuration contents.</para>
		<para>Select the desired configuration to be updated from the similar list as presented above, and paste the edited contents in the <guilabel>Contents</guilabel> field of the operation.</para>

		<note><para>As any operation on &MANAGEMENT.PLATFORM;, this operation can be scheduled for a later time, have a defined timeout and/or include additional notes.</para></note>

		<para>Clicking on the <guibutton>SCHEDULE</guibutton> executes (if <guilabel>Immediately</guilabel> is selected) or schedules the operation. After being executed, it's shown in <guilabel>HISTORY</guilabel>, <guilabel>Completed Operations</guilabel>. Clicking on its name shows the result(s).</para>
		
		<note><para>Editing the DEFAULT, DEBUG or PRODUCTION configurations does not apply them, even if they are currently being used. It only edits the configuration template. To edit the configuration being used, select the CURRENT configuration.</para></note>
	</section>

	<section>
		<title>View Event Router Statistics</title>
		<para>The &MANAGEMENT.PLATFORM; JAIN SLEE platform enables you to gather statistics on it's Event Router. With the <guilabel>View Event Router Statistics</guilabel> operation, in <guilabel>OPERATIONS</guilabel> tab it's possible to view them in a table form.</para>

		<para>The statistics can be filtered by the following levels:</para>
		<variablelist>
			<title>Event Router Statistics Filters</title>
			<varlistentry>
				<term>Filter</term>
				<listitem>
					<itemizedlist>
						<listitem>
							<para>Global: Shows the container global statistics for all executors and event types (eg: container total number of events routed, activities mapped, etc.);</para>
						</listitem>
						<listitem>
							<para>Executors: Shows the statistics per each executor (eg: activities mapped per executor, average routing time per executor, idle time per executor, etc.);</para>
						</listitem>
						<listitem>
							<para>Event Types: Shows the statistics per each event type deployed (eg: average routing time per event type, number of events of that type routed, etc.);</para>
						</listitem>
						<listitem>
							<para>Executors and Event Types: Shows the combined statistics of Executors with Event Types (eg: number of events of certain type router per each executor, average time for routing a certain event type by each executor, total time spent per each executor routing certain event types, etc.);</para>
						</listitem>
						<listitem>
							<para>All: All the above together.</para>
						</listitem>
					</itemizedlist>
				</listitem>
			</varlistentry>
		</variablelist>

		<note><para>As any operation on &MANAGEMENT.PLATFORM;, this operation can be scheduled for a later time, have a defined timeout and/or include additional notes.</para></note>

		<para>Clicking on the <guibutton>SCHEDULE</guibutton> executes (if <guilabel>Immediately</guilabel> is selected) or schedules the operation. After being executed, it's shown in <guilabel>HISTORY</guilabel>, <guilabel>Completed Operations</guilabel>. Clicking on its name shows the result(s).</para>
	</section>
	
	<section>
		<title>Managing Congestion Control</title>
		<para>The &MANAGEMENT.PLATFORM; JAIN SLEE platform provides congestion control mechanisms to prevent the server to become unresponsive under very high load.</para>

		<para>The following parameters are available for configuration and the correspondent set operations (CC-Set&lt;parameter&gt;) can be found under <guilabel>OPERATIONS</guilabel> tab:</para>
		<variablelist>
			<title>Congestion Control Parameters</title>
			<varlistentry>
				<term>Parameter</term>
				<listitem>
					<itemizedlist>
						<listitem>
							<para><emphasis>MinFreeMemoryToTurnOn</emphasis>: The minimum memory (percentage) that should be available to turn on congestion control;</para>
						</listitem>
						<listitem>
							<para><emphasis>MinFreeMemoryToTurnOff</emphasis>: The minimum memory (percentage) that should be available to turn off congestion control;</para>
						</listitem>
						<listitem>
							<para><emphasis>PeriodBetweenChecks</emphasis>: The period in seconds to check if congestion control state should change. 0 means congestion control is off;</para>
						</listitem>
						<listitem>
							<para><emphasis>RefuseStartActivity</emphasis>: Defines if the start of activity should be refused, when congestion control is on;</para>
						</listitem>
						<listitem>
							<para><emphasis>RefuseFireEvent</emphasis>: Defines if the firing of an event should be refused, when congestion control is on;</para>
						</listitem>
					</itemizedlist>
				</listitem>
			</varlistentry>
		</variablelist>

		<note><para>As any operation on &MANAGEMENT.PLATFORM;, these operations can be scheduled for a later time, have a defined timeout and/or include additional notes.</para></note>

		<para>Clicking on the <guibutton>SCHEDULE</guibutton> executes (if <guilabel>Immediately</guilabel> is selected) or schedules the operation. After being executed, it's shown in <guilabel>HISTORY</guilabel>, <guilabel>Completed Operations</guilabel>. Clicking on its name shows the result(s).</para>
	</section>
</section>

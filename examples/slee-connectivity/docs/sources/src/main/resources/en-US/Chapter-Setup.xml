<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [<!ENTITY % BOOK_ENTITIES SYSTEM "JAIN_SLEE_Example_User_Guide.ent">%BOOK_ENTITIES;]>

<chapter id="setup">

	<title>Setup</title>

	<section id="preinstall_requirements_and_prerequisites">
		<title>Pre-Install Requirements and Prerequisites</title>
		<para>Ensure that the following requirements have been met before continuing with the install.</para>
		<section id="hardware_requirements">
			<title>Hardware Requirements</title>
			<para>The Example doesn't change the &THIS.PLATFORM; JAIN SLEE Hardware Requirements, refer to &THIS.PLATFORM; JAIN SLEE documentation for more information.</para>
		</section>
		<section id="software_prerequisites">
			<title>Software Prerequisites</title>
			<para>The Example requires &THIS.PLATFORM; JAIN SLEE properly set. No other requirements need to be met.</para>
		</section>
	</section>	
	
	<section id="source_code">
		<title>&THIS.PLATFORM; JAIN SLEE &THIS.EXAMPLE; Example Source Code</title>

		
		<section id="release_source_building">
			<title>Release Source Code Building</title>
			<procedure>
				<step>
				    <title>Downloading the source code</title>
				    <important>
				    	<para>Subversion is used to manage its source code. Instructions for using Subversion, including install, can be found at <ulink url="http://svnbook.red-bean.com" /></para>
				    </important>
				    <para>Use SVN to checkout a specific release source, the base URL is &THIS.RELEASE_SOURCE_CODE_URL;, then add the specific release version, lets consider &THIS.VERSION;.</para>
				    <programlisting>[usr]$ svn co &THIS.RELEASE_SOURCE_CODE_URL;/&THIS.VERSION; slee-example-&THIS.EXAMPLE.DIRNAME;-&THIS.VERSION;</programlisting>				    
  				</step>
				<step>
				    <title>Building the source code</title>
				    <important>
				    	<para>Maven 2.0.9 (or higher) is used to build the release. Instructions for using Maven2, including install, can be found at <ulink url="http://maven.apache.org" /></para>
				    </important>
				    <para>Use Ant to build the binary.</para>
				    <programlisting>
				    [usr]$ cd slee-example-&THIS.EXAMPLE.DIRNAME;-&THIS.VERSION;
				    [usr]$ mvn install
				    </programlisting>
				    <para>Once the process finishes you should have the <literal>deployable-unit</literal> jars file in the <filename>target</filename> directory, if &THIS.PLATFORM; JAIN SLEE is installed and environment variable JBOSS_HOME is pointing to its underlying &JEE.PLATFORM; directory, then the deployable unit jar will also be deployed in the container.</para>
  				</step>
			</procedure>      
		</section>	
		
		<section id="trunk_source_building">
			<title>Development Trunk Source Building</title>
			<para>Similar process as for <xref linkend="release_source_building"/>, the only change is the SVN source code URL, which is &THIS.TRUNK_SOURCE_CODE_URL;.</para>
		</section>	
		
	</section>
	
	<section id="install">
		<title>Installing &THIS.PLATFORM; JAIN SLEE &THIS.EXAMPLE; Example</title>
		<para>To install the Example simply execute provided ant script <filename>build.xml</filename> default target:</para>
		<programlisting>
		[usr]$ ant
		</programlisting>
		<para>The script will copy the Example's deployable unit jars to the <literal>default</literal> &THIS.PLATFORM; JAIN SLEE server profile deploy directory, to deploy to another server profile use the argument <literal>-Dnode=</literal>.</para>
	</section>
	
	<section id="uninstall">
		<title>Uninstalling &THIS.PLATFORM; JAIN SLEE &THIS.EXAMPLE; Example</title>
		<para>To uninstall the Example simply execute provided ant script <filename>build.xml</filename> <literal>undeploy</literal> target:</para>
		<programlisting>
		[usr]$ ant undeploy
		</programlisting>
		<para>The script will delete the Example's deployable unit jars from the <literal>default</literal> &THIS.PLATFORM; JAIN SLEE server profile deploy directory, to undeploy from another server profile use the argument <literal>-Dnode=</literal>.</para>
	</section>			
	<section id="deployment">
		<title>Deployment &THIS.PLATFORM; JAIN SLEE &THIS.EXAMPLE; Example</title>
		<para>By default &THIS.EXAMPLE; Example is deployed in single <acronym>JVM</acronym>. However it is possible to deploy example in two different <acronym>JVM</acronym>s. This allows to observe how message exchange works in noncolocated deployment. 
		To achieve this perform following:</para>
		<note>
			<para>Please refer to <link linkend="http://community.jboss.org/wiki/jbossas5clusteringguide"><literal>JBOSS</literal> Clustering Guide </link> for information on how to run more than one server instance( JVM )
			 </para>
		</note>
		<procedure>
			<step><para>Copy &THIS.EXAMPLE.JMX.DIR; and &THIS.JCA.RA.DIR; to desired deploy directory (<acronym>J2EE</acronym> container)</para></step>
			<step><para>Edit &THIS.JCA.RA.DIR; configuration file: <filename>slee-ds.xml</filename>, change <literal>://${jboss.bind.address}:1099</literal> to desired ip and port pair(refer to clustering guide)</para></step>
			<step><para>Edit &THIS.EXAMPLE.JMX.DIR; configuretaion file: <filename>jboss-beans.xml</filename>, change bind address and port to match above values </para></step>
			<step><para>Follow instruction found in <xref linkend="running"/>, however respect different <literal>IP</literal> and <literal>port</literal> used by running container</para></step>
		</procedure>
	</section>
</chapter>


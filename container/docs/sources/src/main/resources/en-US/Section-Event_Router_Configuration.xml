<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "JAIN_SLEE_User_Guide.ent">
%BOOK_ENTITIES;
]>

<section id="event_router_configuration">
	
	<title>Event Router Statistics and Configuration</title>
	
	<para>The JAIN SLEE Event Router is the module responsible for creating new service instances and channeling traffic to all connected nodes. It works by using an efficient thread/executor based mechanism to achieve optimal performance.</para>


	
	<para>The Event Router also keeps track of performance and load statistics. It  shows the number of activities being assigned; timings regarding event routing; overview of global/individual threads and executors. Statistics are turned on by default and may be retrieved through the JMX MBean <application>org.mobicents.slee:name=EventRouterStatistics</application>.</para>

	<para>
  An important sub-module of the Event Router is the Executor Mapper, which is responsible for assigning activities to the available executors. JAIN SLEE includes two different Executor Mappers. The default one takes uses hashcode of the activity handle when distributing events, while the second uses a round robin algorithm.
  </para>
  <note>
    <para>
    In the case of advanced performance tuning, it is recommended that you try different configurations provided. In some cases, it might be advantageous to try a custom performance tuning.
    </para>
  </note>
  <para>
  The Executor Mapper is nothing more than an interface:

<screen>
 org.mobicents.slee.container.eventrouter.EventRouterExecutorMapper 
</screen>

 To deploy a custom implementation, drop the implementation class or classes, packed in a jar file, in the server profile <filename>/deploy</filename> directory.
  </para>
	
	<para>Correctly tuning the Event Router is directly related to getting the best performance from the container. Its configuration can be modified, through an XML file and a JMX MBean.</para>
	
		<section id="event_router_persistent_configuration">
			<title>Event Router Persistent Configuration</title>
			<para>Configuration is done through an XML descriptor for each <xref linkend="server_profiles" />. The XML file is named <filename>jboss-beans.xml</filename> and is located at <filename>$JBOSS_HOME/server/profile_name/deploy/mobicents-slee/META-INF</filename>, where <application>profile_name</application> is the server profile name.</para>

			<para>The configuration is exposed as a JBoss Microcontainer Bean as seen in the extract below:</para>
			<programlisting language="XML" role="XML"><![CDATA[
<bean name="Mobicents.JAINSLEE.EventRouterConfiguration"
	class="org.mobicents.slee.container.management.jmx.EventRouterConfiguration">
	<annotation>@org.jboss.aop.microcontainer.aspects.jmx.JMX(name=
		"org.mobicents.slee:name=EventRouterConfiguration",	exposedInterface=
		org.mobicents.slee.container.management.jmx.EventRouterConfigurationMBean.class,
		registerDirectly=true)</annotation>
	<property name="eventRouterThreads">8</property>
	<property name="collectStats">true</property>
	<property name="executorMapperClassName">
		org.mobicents.slee.runtime.eventrouter.mapping.ActivityHashingEventRouterExecutorMapper
	</property>
</bean>]]>
			</programlisting>
			<table frame="all" pgwide="1">
			  	<title>JAIN SLEE Event Router Bean Configuration</title>
				<tgroup colsep="1" cols="3">
			    	<colspec colnum="1" colname="c0"/>
				    <colspec colnum="2" colname="c1"/>
				    <colspec colnum="3" colname="c2"/>
				    <thead>
						<row>
					        <entry>Property Name</entry>
				    	    <entry>Property Type</entry>
					    	<entry>Description</entry>
	      				</row>
				    </thead>
				    <tbody>
					      <row>
					      	<entry>eventRouterThreads</entry>
				    	    <entry>int</entry>
				       		<entry>Defines how many executors should be used by the Event Router, each bounds to a different thread</entry>
					      </row>
					      <row>
					        <entry>collectStats</entry>
					        <entry>boolean</entry>
					        <entry>Defines whether performance and load statistics should be collected, turning this feature off will increase performance</entry>
					      </row>
					      <row>
					      	<entry>confirmSbbEntityAttachement</entry>
					      	<entry>boolean</entry>
					        <entry>Defines whether the event router should reconfirm that sbb entities are attached to activity context, before delivering event, this will avoid that a sbb entity handles concurrent events after it detachs, turning this feature off will increase performance</entry>
					      </row>
				    	  <row>
				  		    <entry>executorMapperClassName</entry>
				  		    <entry>Class</entry>
				    	    <entry>This property defines the implementation class of Executor Mapper used by the Event Router, the one above and default uses the activity handle hashcode to do the mapping, an alternative is <classname>org.mobicents.slee.runtime.eventrouter</classname><classname>.mapping.RoundRobinEventRouterExecutorMapper</classname>, which uses Round Robin algorithm.</entry>
					      </row>					 
			    	</tbody>
			  	</tgroup>
			</table>
		</section>
		
		<section id="event_router_jmx_configuration">
			<title>Event Router JMX Configuration</title>
			<para>The Event Router module configuration can be changed through JMX, while the container is still running. Using JMX to edit the configuration will not survive a server shutdown and restart.</para>
			
			<para>The Event Router configuration variable that can be edited through JMX MBean is shown below.</para>

<screen>
org.mobicents.slee:name=EventRouterConfiguration
</screen>

<para>
The above forms the getters/setters used to change each property defined in the persistent configuration. 
</para>

<para>
See <xref linkend="management_jmx_console"/> for more information about using the JMX Console to edit MBeans.</para>
		</section>	
		
</section>
	

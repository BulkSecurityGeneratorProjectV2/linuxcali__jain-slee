<?xml version="1.0"?>
<project name="mobicents.release" default="release" basedir=".">

	<property environment="sys"/>
	<property name="ra.dirs" value="sip11,http-client,http-servlet,xmpp,smpp5,jcc,map,mgcp,diameter-base,diameter-sh-client,diameter-sh-server,diameter-cca,diameter-cx-dx,diameter-rf,diameter-ro,xcap-client"/>
	<property name="example.dirs" value="sip-services,sip-wake-up,google-talk-bot,sip-b2bua,call-controller2,mgcp-demo,converged-demo"/>
	<property name="enablers.dirs" value="xdm-client"/>
	<property name="my.release.dir" value="${ant.file.mobicents.release}/../target"/>
	<property name="release.dir" value="${my.release.dir}"/>
	<property name="jboss.version" value="5.1.0.GA"/>
	<property name="release.version" value="2.2.1.FINAL-SNAPSHOT"/>
	<property name="jboss.distro.zip.path" value="jboss-${jboss.version}.zip"/>
	<property name="jboss.home.relative.path" value="jboss-${jboss.version}/"/>
	<property name="jboss.home" value="${release.dir}/${jboss.home.relative.path}/"/>
	<property name="jboss.config" value="default" />
	<property name="docs.profile" value="mobicents" />
	<property name="mms.version" value="2.0.0.GA" />
	<property name="mms.download.url" value ="http://downloads.sourceforge.net/project/mobicents/Mobicents%20Media%20Server/${mms.version}/mms-standalone-${mms.version}.zip"/>
	<property name="mms.distro.zip.path" value="media-server.zip"/>
	<property name="diameter.version" value="1.3.2.FINAL" />
	<!--
	<property name="diameter.download.url" value ="http://downloads.sourceforge.net/project/mobicents/Mobicents%20Diameter/mobicents-diameter-${diameter.version}/mobicents-diameter-${diameter.version}.zip"/>
	-->
	<property name="diameter.download.url" value ="http://downloads.sourceforge.net/project/mobicents/Mobicents%20Diameter/mobicents-diameter-${diameter.version}/mobicents-diameter-mux-jboss5-${diameter.version}.sar.zip"/>
	<property name="diameter.distro.zip.path" value="diameter-mux.zip"/>

	<property name="eclipslee.jar" value="org.mobicents.eclipslee.servicecreation_1.3.0.jar"/>
	<property name="eclipslee.download.url" value ="http://mobicents.googlecode.com/files/${eclipslee.jar}"/>

	<taskdef onerror="fail" resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${ant.file.mobicents.release}/../ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<condition property="mvn.executable" value="${sys.M2_HOME}\bin\mvn.bat" else="mvn">
		<os family="windows"/>
	</condition>
	<condition property="default.jboss.config">
		<equals arg1="${jboss.config}" arg2="default"/>
	</condition>
	<condition property="all.jboss.config">
		<equals arg1="${jboss.config}" arg2="all"/>
	</condition>

	<target name="build-core" description="">
		<exec executable="${mvn.executable}" dir="${ant.file.mobicents.release}/../checkout/core">
			<arg line="install -Djboss.home=${jboss.home} -Dnode=${jboss.config} -P set-svn-revision" />
		</exec>
		<antcall target="build-docs">
			<param name="docs.source.dir" value="${ant.file.mobicents.release}/../checkout/core/docs" />
			<param name="docs.dest.dir" value="${release.dir}/docs" />
		</antcall>
	</target>

	<target name="build-docs" description="">
		<exec executable="${mvn.executable}" dir="${docs.source.dir}">
			<arg line="clean install -P ${docs.profile}" />
		</exec>
		<copy failonerror="true" toDir="${docs.dest.dir}" overwrite="true">
			<fileset dir="${docs.source.dir}/jdocbook-${docs.profile}/target/docbook/publish"/>
		</copy>
	</target>

	<target name="build-mmc" description="">
		<exec executable="${mvn.executable}" dir="${ant.file.mobicents.release}/../checkout/tools/jopr-plugin">
			<arg line="install -P maven-release,release,set-svn-revision -Drelease.name=target -Djboss.home=${release.dir}/tmp -Djboss.path=../../${jboss.home.relative.path} -Dnode=${jboss.config}" />
		</exec>

		<delete dir="${release.dir}/tmp"/>
		<copy failonerror="true" toDir="${release.dir}/tools/management-console" overwrite="true">
			<fileset dir="${ant.file.mobicents.release}/../checkout/release/target/tools/management-console"/>
		</copy>

		<delete dir="${ant.file.mobicents.release}/../checkout/release/target/tools/management-console"/>

	</target>

	<target name="build-remote-slee-connection" description="">
		<exec executable="${mvn.executable}" dir="${ant.file.mobicents.release}/../checkout/tools/remote-slee-connection">
			<arg line="install -P release,set-svn-revision -Drelease.name=target" />
		</exec>

		<copy failonerror="true" toDir="${release.dir}/tools/remote-slee-connection" overwrite="true">
			<fileset dir="${ant.file.mobicents.release}/../checkout/release/target/tools/remote-slee-connection" />
		</copy>

		<delete dir="${ant.file.mobicents.release}/../checkout/release/target/tools/remote-slee-connection" />

	</target>

	<target name="build-cli" description="">
		<exec executable="${mvn.executable}" dir="${ant.file.mobicents.release}/../checkout/tools/twiddle">
			<arg line="install -P release,set-svn-revision -Drelease.name=target" />
		</exec>
		<delete dir="${release.dir}/tmp" />
		<copy failonerror="true" toDir="${release.dir}/tools/twiddle" overwrite="true">
			<fileset dir="${ant.file.mobicents.release}/../checkout/release/target/tools/twiddle" />
		</copy>
		<delete dir="${ant.file.mobicents.release}/../checkout/release/target/tools/twiddle" />
	</target>

	<target name="build-sip-balancer" description="">
		<exec executable="${mvn.executable}" dir="${ant.file.mobicents.release}/../checkout/tools/sip-balancer">
			<arg line="clean install -P set-svn-revision,maven-release -Dmaven.test.skip=true" />
		</exec>

		<copy failonerror="true" toDir="${release.dir}/tools/sip-balancer" overwrite="true">
			<fileset dir="${ant.file.mobicents.release}/../checkout/tools/sip-balancer/jar/target">
				<include name="**.jar" />
			</fileset>
			<fileset dir="${ant.file.mobicents.release}/../checkout/tools/sip-balancer/config-examples">
				<include name="**.properties" />
			</fileset>
		</copy>

		<copy failonerror="true" toDir="${release.dir}/tools/sip-balancer/docs" overwrite="true">
			<fileset dir="${ant.file.mobicents.release}/../checkout/tools/sip-balancer/docs/jdocbook-${docs.profile}/target/docbook/publish"/>
		</copy>
	</target>

	<target name="build-sccp" description="">
		<exec executable="${mvn.executable}" dir="${ant.file.mobicents.release}/../checkout/tools/sccp">
			<arg line="clean install -P set-svn-revision,maven-release -Dmaven.test.skip=true" />
		</exec>

		<copy failonerror="true" toDir="${release.dir}/tools/sccp/sccp-impl-stack" overwrite="true">
			<fileset dir="${ant.file.mobicents.release}/../checkout/tools/sccp/sccp-impl/target/asccp-impl-stack"/>
		</copy>

		<copy failonerror="true" toDir="${release.dir}/tools/sccp/docs" overwrite="true">
			<fileset dir="${ant.file.mobicents.release}/../checkout/tools/sccp/docs/jdocbook-${docs.profile}/target/docbook/publish"/>
		</copy>
	</target>

	<target name="build-ras" description="Resource adaptors.">
		<for delimiter="," param="dir.name" list="${ra.dirs}">
			<sequential>
				<echo>Packaging RA for release from DIR[${ant.file.mobicents.release}/../checkout/resources/@{dir.name}]</echo>
				<exec executable="${mvn.executable}" dir="${ant.file.mobicents.release}/../checkout/resources/@{dir.name}">
					<arg line="install -P release,set-svn-revision -Drelease.name=target -Djboss.home=${release.dir}/tmp -Djboss.path=../../${jboss.home.relative.path} -Dnode=${jboss.config}" />
				</exec>
			</sequential>
		</for>
		<delete dir="${release.dir}/tmp"/>
		<copy failonerror="true" toDir="${release.dir}/resources" overwrite="true">
			<fileset dir="${ant.file.mobicents.release}/../checkout/release/target/resources"/>
		</copy>

		<delete dir="${ant.file.mobicents.release}/../checkout/release/target/resources"/>
	</target>

	<target name="build-examples" description="Examples.">
		<for delimiter="," param="dir.name" list="${example.dirs}">
			<sequential>
				<echo>Packaging Example for release from DIR[${ant.file.mobicents.release}/../checkout/examples/@{dir.name}]</echo>
				<exec executable="${mvn.executable}" dir="${ant.file.mobicents.release}/../checkout/examples/@{dir.name}">
					<arg line="install -P release,set-svn-revision -Drelease.name=target -Djboss.home=${release.dir}/tmp -Djboss.path=../../${jboss.home.relative.path} -Dnode=${jboss.config}" />
				</exec>
			</sequential>
		</for>
		<delete dir="${release.dir}/tmp"/>
		<copy failonerror="true" toDir="${release.dir}/examples" overwrite="true">
			<fileset dir="${ant.file.mobicents.release}/../checkout/release/target/examples"/>
		</copy>
		<delete dir="${ant.file.mobicents.release}/../checkout/release/target/examples"/>
	</target>

	<target name="build-enablers" description="">
		<for delimiter="," param="dir.name" list="${enablers.dirs}">
			<sequential>
				<echo>Packaging Enabler for release from DIR[${ant.file.mobicents.release}/../checkout/enablers/@{dir.name}]</echo>
				<exec executable="${mvn.executable}" dir="${ant.file.mobicents.release}/../checkout/enablers/@{dir.name}">
					<arg line="install -P release,set-svn-revision -Drelease.name=target -Djboss.home=${release.dir}/tmp -Djboss.path=../../${jboss.home.relative.path} -Dnode=${jboss.config}" />
				</exec>
			</sequential>
		</for>
		<delete dir="${release.dir}/tmp" />
		<copy failonerror="true" toDir="${release.dir}/enablers" overwrite="true">
			<fileset dir="${ant.file.mobicents.release}/../checkout/release/target/enablers" />
		</copy>
		<delete dir="${ant.file.mobicents.release}/../checkout/release/target/enablers" />
	</target>

	<!--
	<target name="build-mms" description="">
		<exec executable="${mvn.executable}" dir="${ant.file.mobicents.release}/../checkout/mms">
			<arg line="clean install -Djboss.home=${jboss.home} -Dnode=${jboss.config} -Dmaven.test.skip=true -P set-svn-revision" />
		</exec>
	</target>
	-->

	<target name="copy-extra-jbossas-files">
		<!-- <copy failonerror="true" file="${ant.file.mobicents.release}/../jbossjta-properties.xml" tofile="${jboss.home}/server/${jboss.config}/conf/jbossjta-properties.xml" overwrite="true" /> 
		<copy failonerror="true" file="${ant.file.mobicents.release}/../jboss-log4j-${jboss.config}.xml" tofile="${jboss.home}/server/${jboss.config}/conf/jboss-log4j.xml" overwrite="true" /> -->
	</target>

	<target name="release" depends="clean,get-jboss,unzip-jboss,get-mms,unzip-mms,get-diameter,unzip-diameter,get-eclipslee,checkout-sources,build-core,build-mmc,build-sccp,build-remote-slee-connection,build-cli,build-sip-balancer,build-ras,build-enablers,build-examples,build-sources-for-debug-zip,copy-extra-jbossas-files">

		<copy failonerror="true" file="${ant.file.mobicents.release}/../readme.txt" tofile="${release.dir}/readme.txt" overwrite="true" />
		<tstamp>
			<format property="time.stamp" pattern="yyyyMMdd-HHmm" />
		</tstamp>
		<delete dir="." includes="mobicents-jainslee-server-${release.version}-*.zip"/>
		<antcall target="zip-jboss">
			<param name="zip.filename" value="mobicents-jainslee-${release.version}-jboss-${jboss.version}.zip" />
			<param name="jboss.home" value="${jboss.home}" />
		</antcall>
		<!--antcall target="build-src-zip">
			<param name="zip.filename" value="mobicents-jainslee-${release.version}-src.zip" />
		</antcall-->
		<delete dir="${jboss.home}" failonerror="true" />
		<antcall target="clean"/>
	</target>

	<target name="clean">
		<delete dir="${release.dir}" />
	</target>

	<target name="unzip-jboss">
		<delete dir="${jboss.home}" failonerror="true" />
		<unzip src="${jboss.distro.zip.path}" dest="${release.dir}" />
		<antcall target="cleanup-jboss"/>
	</target>

	<target name="cleanup-jboss">
		<!--antcall target="delete-all-jboss-config"/>
		<antcall target="delete-default-jboss-config"/-->
		<delete dir="${jboss.home}/server/minimal" />
		<delete dir="${jboss.home}/server/standard" />
		<delete dir="${jboss.home}/server/web" />
	</target>
	<target name="delete-all-jboss-config" unless="all.jboss.config">
		<delete dir="${jboss.home}/server/all" />
	</target>
	<target name="delete-default-jboss-config" unless="default.jboss.config">
		<delete dir="${jboss.home}/server/default" />
	</target>

	<!-- zip sources for debug -->

	<target name="build-sources-for-debug-zip" depends="">
		<property name="debug.src.zip.filename" value="sources.zip" />
		<mkdir dir="${release.dir}/sources" />
		<for param="dir.name">
			<dirset dir="${ant.file.mobicents.release}/../checkout"
				includes="**/src/main/java"
				excludes="**/maven-archetypes/** **/management-console/**"
				 />
			<sequential>
				<echo>Packaging debug src for @{dir.name}</echo>
				<copy todir="${release.dir}/sources" includeEmptyDirs="yes">
					<fileset dir="@{dir.name}" />
				</copy>
			</sequential>
		</for>
		<zip destfile="${release.dir}/${debug.src.zip.filename}" basedir="${release.dir}/sources" />
		<delete dir="${release.dir}/sources" />
	</target>

	<!-- zip release -->

	<target name="zip-jboss" description="">
		<fixcrlf srcdir="${jboss.home}/bin" includes="*.sh" eol="lf" eof="remove" />
		<zip destfile="${ant.file.mobicents.release}/../${zip.filename}" filesonly="false">
			<zipfileset dir="${release.dir}" filemode="755" includes="**/*.sh" />
			<zipfileset dir="${release.dir}" prefix=""
                excludes="**/*.sh **/server/*/data/** **/server/*/log/** **/server/*/tmp/** **/server/*/work/** **/server/tmp/**"/>
		</zip>
		<antcall target="checksum">
			<param name="source.file" value="${ant.file.mobicents.release}/../${zip.filename}" />
			<param name="algorithm" value="sha1" />
		</antcall>
	</target>

	<target name="set-src-excludes">
		<defaultexcludes add="**/target/**"/>
		<defaultexcludes add="**/docs/**"/>
		<defaultexcludes add="**/legacy/**"/>
		<defaultexcludes add="**/release/**"/>
		<defaultexcludes add="**/logs/**"/>
		<defaultexcludes add="**/tests/**"/>
		<defaultexcludes add="**/${*}/**"/>
		<defaultexcludes add="**/*JBOSS_HOME*/**"/>
		<defaultexcludes add="**/*CATALINA_HOME*/**"/>
		<defaultexcludes add="**/.gwt-cache/**"/>
		<defaultexcludes add="**/.settings/**"/>
		<defaultexcludes add="**/.project"/>
		<defaultexcludes add="**/.classpath"/>
		<defaultexcludes add="**/*.class" echo="true"/>
	</target>

	<!-- zip source project that can be used to build release -->

	<target name="build-ras-src">
		<for delimiter="," param="dir.name" list="${ra.dirs}">
			<sequential>
				<echo>Packaging RA sources for release from DIR[${ant.file.mobicents.release}/../checkout/resources/@{dir.name}]</echo>
				<copy todir="${release.dir}/src/mobicents/servers/jain-slee/resources/@{dir.name}" includeEmptyDirs="false">
					<fileset dir="${ant.file.mobicents.release}/../checkout/resources/@{dir.name}" />
				</copy>
			</sequential>
		</for>
	</target>

	<target name="build-examples-src">
		<for delimiter="," param="dir.name" list="${example.dirs}">
			<sequential>
				<echo>Packaging Example sources for release from DIR[${ant.file.mobicents.release}/../checkout/examples/@{dir.name}]</echo>
				<copy todir="${release.dir}/src/mobicents/servers/jain-slee/examples/@{dir.name}" includeEmptyDirs="false">
					<fileset dir="${ant.file.mobicents.release}/../checkout/examples/@{dir.name}"/>
				</copy>
			</sequential>
		</for>
	</target>

	<target name="build-src-zip" depends="set-src-excludes, build-ras-src, build-examples-src">
		<copy todir="${release.dir}/src/mobicents/servers/jain-slee/core" includeEmptyDirs="false">
			<fileset dir="${ant.file.mobicents.release}/../checkout/core"/>
		</copy>
		<copy todir="${release.dir}/src/mobicents/servers/jain-slee/tools" includeEmptyDirs="false">
			<fileset dir="${ant.file.mobicents.release}/../checkout/tools"
        		     excludes=""/>
		</copy>

		<zip destfile="${ant.file.mobicents.release}/../${zip.filename}" basedir="${release.dir}/src" />

		<antcall target="checksum">
			<param name="source.file" value="${ant.file.mobicents.release}/../${zip.filename}" />
			<param name="algorithm" value="sha1" />
		</antcall>

		<delete dir="${release.dir}/src" />

		<defaultexcludes default="true"/>
	</target>

	<available file="${ant.file.mobicents.release}/../${jboss.distro.zip.path}" property="got.jboss" />
	<target name="get-jboss" unless="got.jboss">
		<echo>Downloading JBoss AS</echo>
		<get dest="${ant.file.mobicents.release}/../${jboss.distro.zip.path}" src="http://downloads.sourceforge.net/jboss/jboss-${jboss.version}.zip"/>
	</target>

	<available file="${ant.file.mobicents.release}/../${mms.distro.zip.path}" property="got.mms" />
	<target name="get-mms" unless="got.mms">
		<echo>Downloading Mobicents Media Server</echo>
		<get dest="${ant.file.mobicents.release}/../${mms.distro.zip.path}" src="${mms.download.url}"/>
	</target>

	<target name="unzip-mms">
		<delete dir="${release.dir}/tools/media-server" failonerror="false" />
		<unzip src="${mms.distro.zip.path}" dest="${release.dir}/tools/media-server" />
	</target>

	<available file="${ant.file.mobicents.release}/../${diameter.distro.zip.path}" property="got.diameter" />
	<target name="get-diameter" unless="got.diameter">
		<echo>Downloading Mobicents Diameter</echo>
		<get dest="${ant.file.mobicents.release}/../${diameter.distro.zip.path}" src="${diameter.download.url}"/>
	</target>

	<target name="unzip-diameter">
		<delete dir="${release.dir}/tools/mobicents-diameter" failonerror="false" />
		<unzip src="${diameter.distro.zip.path}" dest="${release.dir}/tools/mobicents-diameter" />
	</target>

	<target name="get-eclipslee">
		<echo>Downloading EclipSLEE</echo>
		<mkdir dir="${release.dir}/tools/eclipslee"/>
		<get dest="${release.dir}/tools/eclipslee/${eclipslee.jar}" src="${eclipslee.download.url}"/>
	</target>

	<target name="checksum">
		<checksum file="${source.file}" algorithm="${algorithm}" fileext=".${algorithm}" forceOverwrite="yes"/>
	</target>

	<target name="checkout-sources">
		<echo>Checking out sources</echo>
		<delete dir="${ant.file.mobicents.release}/../checkout" />
		<exec executable="${mvn.executable}" dir="${ant.file.mobicents.release}/../">
			<arg line="validate -P checkout" />
		</exec>
	</target>

	<target name="clean-downloads">
		<delete file="${ant.file.mobicents.release}/../media-server.zip" failonerror="false"/>
		<delete file="${ant.file.mobicents.release}/../diameter-mux.zip" failonerror="false"/>
	</target>

</project>

<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "../User_Guide.ent">
%BOOK_ENTITIES;
]>

<section id="ratype_ra_interface">

	<title>Resource Adaptor Interface</title>

	<para>The &THIS.RA; Resource Adaptor interface, of type <literal>net.java.client.slee.resource.http.HttpClientResourceAdaptorSbbInterface</literal>, which an SBB uses to create new <literal>HttpClientActivity</literal> instances or send synchronous requests, its interface is defined as follows:</para>
	
	<programlisting language="Java" role="JAVA">
		<![CDATA[
package net.java.client.slee.resource.http;

import java.io.IOException;

import javax.slee.resource.StartActivityException;

import net.java.client.slee.resource.http.event.Response;

import org.apache.commons.httpclient.HttpException;
import org.apache.commons.httpclient.HttpMethod;
import org.apache.commons.httpclient.HttpState;
import org.apache.commons.httpclient.params.HttpClientParams;

public interface HttpClientResourceAdaptorSbbInterface {

	public HttpClientActivity createHttpClientActivity() throws StartActivityException;

	public HttpClientActivity createHttpClientActivity(
			boolean endOnReceivingResponse) throws StartActivityException;
			
	public HttpMethod createHttpMethod(HttpMethodName methodName, String uri);

	public Response executeMethod(HttpMethod method) throws HttpException, IOException;

	public HttpClientParams getParams();

	public HttpState getState();

	public void setParams(HttpClientParams params);

	public void setState(HttpState state);
}]]>
    </programlisting>

	<variablelist>
		<varlistentry>
			<term>
				The
				<literal>createHttpClientActivity()</literal>
				method:
			</term>
			<listitem>
				<para>
					Creates a new
					<literal>HttpClientActivity</literal>
					instance which has to be ended by the SBB, that is, it won't end
					once the HTTP Request response is received.
				</para>
			</listitem>
		</varlistentry>

		<varlistentry>
			<term>
				The
				<literal>createHttpClientActivity(boolean)</literal>
				method:
			</term>
			<listitem>
				<para>
					Creates a new
					<literal>HttpClientActivity</literal>
					instance. If the parameter is true then the activity will end once
					the HTTP Request response is received, if false then the SBB needs
					to end the activity through its endActivity() method.
				</para>
			</listitem>
		</varlistentry>

		<varlistentry>
			<term>
				The
				<literal>createHttpMethod(HttpMethodName, String)</literal>
				method:
			</term>
			<listitem>
				<para>Creates an HttpMethod instance, which request will be sent to
					the specified URI.</para>
			</listitem>
		</varlistentry>

		<varlistentry>
			<term>
				The
				<literal>executeMethod(HttpMethod)</literal>
				method:
			</term>
			<listitem>
				<para>Sends the HttpMethod's request synchronously, blocking till a
					response is received.</para>
			</listitem>
		</varlistentry>

		<varlistentry>
			<term>
				The
				<literal>getParams()</literal>
				method:
			</term>
			<listitem>
				<para>Retrieves the HTTP protocol parameters associated with the
					HttpClient.</para>
			</listitem>
		</varlistentry>

		<varlistentry>
			<term>
				The
				<literal>getState()</literal>
				method:
			</term>
			<listitem>
				<para>Retrieves the HTTP state associated with the HttpClient.
				</para>
			</listitem>
		</varlistentry>

		<varlistentry>
			<term>
				The
				<literal>setParams(HttpClientParams)</literal>
				method:
			</term>
			<listitem>
				<para>Sets the HTTP protocol parameters for the HttpClient.</para>
			</listitem>
		</varlistentry>

		<varlistentry>
			<term>
				The
				<literal>setState(HttpState)</literal>
				method:
			</term>
			<listitem>
				<para>Sets the HTTP state for the HttpClient.</para>
			</listitem>
		</varlistentry>
	</variablelist>
	
</section>
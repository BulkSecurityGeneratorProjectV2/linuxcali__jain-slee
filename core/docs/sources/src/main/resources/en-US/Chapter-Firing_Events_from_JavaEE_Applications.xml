<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [<!ENTITY % BOOK_ENTITIES SYSTEM "User_Guide.ent">%BOOK_ENTITIES;]>

<chapter
	id="slee_connection_factory">

	<title>Firing Events from Java EE Applications</title>
	
	<section id="slee_connection_factory_intro">
		<title>SLEE Connection Factory</title>
		<para>The JAIN SLEE specification includes an API for interaction with JAIN SLEE container, with the interface <classname>javax.slee.connection.SleeConnectionFactory</classname> upfront, which allows external applications, such as an EJB, to create connections to a specific JAIN SLEE instance, and use that to fire events.</para>
		<para>&THIS.PLATFORM; JAIN SLEE provides two different implementations of such API, one for access in the same JVM, another for remote access. Both implementations expose the SLEE Connection Factory in the local JNDI tree, thus the same code is used by the application, independently of the implementation used.</para>
		
		<section id="local_slee_connection_factory">
			<title>Local SLEE Connection Factory</title>
			<para>&THIS.PLATFORM; JAIN SLEE container instances always expose the local SLEE Connection Factory in its JVM, which means that an external application running in same JVM doesn't need any additional tool or setup to use it.</para>
		</section>
		
		<section id="remote_slee_connection_factory">
			<title>Remote SLEE Connection Factory</title>
			<para>&THIS.PLATFORM; JAIN SLEE includes a tool, named Remote SLEE Connection Tool, which is a JCA connector that can be deployed in any Java EE application server. Once deployed this connector installs the factory into JNDI, which communicates with the remote SLEE container through RMI.</para>
			<para>&THIS.PLATFORM; Remote SLEE Connection Tool is bundled in all &THIS.PLATFORM; JAIN SLEE releases, in the tools/remote-slee-connection directory, including its own documentation.</para>
		</section>
		
		<section id="using-slee-connection-factory">
			<title>Using SLEE Connection Factory</title>
			<para>Below is example code which retrieves the SLEE Connection Factory and uses it to fire an event into the JAIN SLEE container. The code is the same no matter the SLEE container in in the same JVM or not.</para>
		<programlisting language="Java" role="JAVA">
			<![CDATA[
	// retrieves JNDI context
	InitialContext context = new InitialContext();
	
	// retrieves the connection factory from JNDI
	SleeConnectionFactory factory = (SleeConnectionFactory) context.lookup("java:/MobicentsConnectionFactory");
	
	// creates a connection to the SLEE container
	SleeConnection connection = factory.getConnection();

	// creates the activity handle which will be used to fire the event 
	ExternalActivityHandle handle = connection.createActivityHandle();

	// retrieves the event type ID
	EventTypeID eventTypeID = connection.getEventTypeID("CustomEvent", "...", "1.0");
	
	// creates the event object
	CustomEvent eventObject = new CustomEvent();
	
	// fires the event in the remote SLEE container
	connection.fireEvent(eventObject, eventTypeID, handle, null);

	// closes the connection
	connection.close();]]>
		</programlisting>			
	</section>	
		
	</section>
				
</chapter>


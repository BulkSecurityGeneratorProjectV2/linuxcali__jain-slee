<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [<!ENTITY % BOOK_ENTITIES SYSTEM "User_Guide.ent">%BOOK_ENTITIES;]>
<section id="clustering_fault_tolerant_ra_api">
  <title>Fault Tolerant Resource Adaptor API</title>
  <para>JAIN SLEE Resource Adaptors exist on the boundary between the container and the underlying protocol. The specification contract requires the <acronym>RA</acronym> object to implement the <literal>javax.slee.resource.ResourceAdaptor</literal> interface. This interface defines callbacks, which SLEE uses to interact with the <acronym>RA</acronym>, including one to provide the <literal>javax.slee.resource.ResourceAdaptorContext</literal> object. The Resource Adaptor Context provides <acronym>RA</acronym> object facilities to interact with SLEE.
  </para>
  <para>The JAIN SLEE 1.1 RA API is a major milestone, standardizing RA and JSLEE contract. Unfortunately it is not enough, it misses an API for clustering, and that is critical for a RA working with a clustered JAIN SLEE. Contarct does not define any fault tolerant data source nor callbacks to inform on cluster state.
  </para>
  <para>The <application>Fault Tolerant RA API</application> extends the JAIN SLEE 1.1 RA API, providing missing features related to clustering, and it does it in a very familiar way, anyone who develops a JAIN SLEE 1.1 RA easily uses our proprietary API.
  </para>
  <section id="fault_tolerant_resource_adaptor">
    <title>The Fault Tolerant Resource Adaptor Object</title>
    <variablelist>
      <para>The core of the Fault Tolerant RA API is the <literal>org.mobicents.slee.resource.cluster.FaultTolerantResourceAdaptor</literal> interface. It is intended to be used instead of the <literal>javax.slee.resource.ResourceAdaptor</literal> interface from the JAIN SLEE 1.1 Specification.
      </para>
      <para>
      The FaultTolerant interface provides three new callback methods used by the container:
      </para>
      <varlistentry>
        <term>
          <literal>setFaultTolerantResourceAdaptorContext(FaultTolerantResourceAdaptorContext context)</literal>
        </term>
        <listitem>
          <para>This method provides the RA with the <literal>org.mobicents.slee.resource.cluster.FaultTolerantResourceAdaptorContext</literal> object, which gives access to facilities related with the cluster. This method is invoked by SLEE right after invoking <literal>setResourceAdaptorContext( ResourceAdaptorContext context)</literal> from JAIN SLEE 1.1 specs.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <literal>unsetFaultTolerantResourceAdaptorContext()</literal>
        </term>
        <listitem>
          <para>This method indicates that the RA should remove any references it has to the FaultTolerantResourceAdaptorContext, as it is not valid anymore. The method is invoked by SLEE before invoking <literal>unsetResourceAdaptorContext()</literal> from JAIN SLEE 1.1 specs.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <literal>failOver(K key)</literal>
        </term>
        <listitem>
          <para>Callback from SLEE when the local RA was selected to recover the state for a replicated data key, which was owned by a cluster member that failed. The RA may then restore any runtime resources associated with such data.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <literal>dataRemoved(K key)</literal>
        </term>
        <listitem>
          <para>Optional callback from SLEE when the replicated data key was removed from the cluster, this may be helpful when the local RA maintains local state.</para>
        </listitem>
      </varlistentry>
      
    </variablelist>
  </section>
  <section id="fault_tolerant_resource_adaptor_context">
    <title>The Fault Tolerant Resource Adaptor Context And Replicated Data Sources</title>
    <variablelist>
      <para>Cluster RA context follows the contract of JAIN SLEE 1.1 specification interface <literal>javax.slee.resource.ResourceAdaptorContext</literal>. It gives access to  facilities for RA to run in clustered environment.
      </para>
      <para>
      The cluster contract is defined in: <literal>org.mobicents.slee.resource.cluster.FaultTolerantResourceAdaptorContext</literal>. It provides critical information, such as if SLEE is running in local mode (not clustered), if it is the head/master member of the cluster, and what the members of the cluster are.
      </para>
      <para>It also provides two data sources to replicate data in cluster:</para>
      <varlistentry>
        <term>
          <literal>ReplicatedData</literal>
        </term>
        <listitem>
          <para>A container for serializable data, which is replicated in the SLEE cluster, but don&apos;t require any failover.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          <literal>ReplicatedDataWithFailover</literal>
        </term>
        <listitem>
          <para>A <literal>ReplicatedData</literal> which requires fail over callbacks, this means, that for all data stored here, when a cluster member goes down, the SLEE in another cluster member will invoke the <literal>failOver(Key k)</literal> callback in the Fault Tolerant RA object.</para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
    When retrieved from the context through a boolean parameter, both types of <literal>ReplicatedData</literal> can activate the callback on the <literal>FaultTolerantResourceAdaptor</literal> which indicates that a specific data was removed from the cluster remotely.
    </para>
  </section>
</section>
